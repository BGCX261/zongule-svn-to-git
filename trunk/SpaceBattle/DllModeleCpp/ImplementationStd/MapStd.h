//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma once
#define WANTDLLEXP
#ifdef WANTDLLEXP		//exportation dll
#define DLL  __declspec( dllexport )
#define EXTERNC extern "C"
#else
#define DLL		//standard
#define EXTERNC
#endif
#pragma warning( disable: 4251 )  //<- warning sur l'utilisation de std::vector dns une dll


#include <vector>
#include "..\Abstrait\Map.h"
#include "..\Abstrait\Square.h"
#include "..\Abstrait\SquareFactory.h"
#include <exception>

/*! \class MapStd
* \brief classe representant une map
* \implements Map
*
*/
	class DLL MapStd : public Map
	{
	private:

		int longueur;	/*!< Longueur (horizontale) de la map*/
		int hauteur;	/*!< Hauteur (verticale) de la map*/
		std::vector<std::vector<Square*>> grid;	/*!< matrice des cases de la map*/
		bool validMap;	/*!< true si map validee par le builder*/

		public :
		MapStd();
		~MapStd();
		void addSquare(int posx, int posy, Square* s);
		void printConsole();
		void setLongueur(int l);
		void setHauteur(int h);
		int getLongueur();
		int getHauteur();
		Square* getSquare(int posx, int posy);
		void setValidMap(bool b);
		bool isValidMap();

		void initialize (int longueur, int haut);

		SquareType getSquareType(int x,int y);


	}; 
	EXTERNC DLL MapStd* MapStd_New();
	EXTERNC DLL void MapStd_Delete(MapStd* m);
